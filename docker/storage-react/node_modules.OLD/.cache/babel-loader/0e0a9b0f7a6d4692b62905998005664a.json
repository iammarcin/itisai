{"ast":null,"code":"var _jsxFileName = \"/app/src/components/ChatWindow.js\";\n// ChatWindow.js\nimport React, { useEffect, useState } from 'react';\nimport ChatMessage from './ChatMessage';\nimport apiService from '../services/apiService';\nimport './ChatWindow.css'; // Assuming you have CSS for chat window\n\nconst ChatWindow = ({\n  selectedSession\n}) => {\n  const [chatContent, setChatContent] = useState(null);\n  useEffect(() => {\n    if (selectedSession) {\n      const fetchChatContent = async () => {\n        try {\n          const content = await apiService.fetchChatContent(selectedSession.session_id);\n          console.log(\"Chat content:\", content);\n          setChatContent(content);\n        } catch (error) {\n          console.error('Failed to fetch chat content', error);\n        }\n      };\n      fetchChatContent();\n    }\n  }, [selectedSession]);\n  if (!selectedSession) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }\n    }, \"Select a chat session to view messages\");\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-window\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, selectedSession.session_name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, chatContent && chatContent.map((message, index) => /*#__PURE__*/React.createElement(ChatMessage, {\n    key: index,\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default ChatWindow;","map":{"version":3,"names":["React","useEffect","useState","ChatMessage","apiService","ChatWindow","selectedSession","chatContent","setChatContent","fetchChatContent","content","session_id","console","log","error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","session_name","map","message","index","key"],"sources":["/app/src/components/ChatWindow.js"],"sourcesContent":["// ChatWindow.js\nimport React, { useEffect, useState } from 'react';\nimport ChatMessage from './ChatMessage';\nimport apiService from '../services/apiService';\nimport './ChatWindow.css'; // Assuming you have CSS for chat window\n\nconst ChatWindow = ({ selectedSession }) => {\n  const [chatContent, setChatContent] = useState(null);\n\n  useEffect(() => {\n    if (selectedSession) {\n      const fetchChatContent = async () => {\n        try {\n          const content = await apiService.fetchChatContent(selectedSession.session_id);\n          console.log(\"Chat content:\", content);\n          setChatContent(content);\n        } catch (error) {\n          console.error('Failed to fetch chat content', error);\n        }\n      };\n\n      fetchChatContent();\n    }\n  }, [selectedSession]);\n\n  if (!selectedSession) {\n    return <div className=\"chat-window\">Select a chat session to view messages</div>;\n  }\n\n  return (\n    <div className=\"chat-window\">\n      <h2>{selectedSession.session_name}</h2>\n      <div className=\"messages\">\n        {chatContent && chatContent.map((message, index) => (\n          <ChatMessage key={index} message={message} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatWindow;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAO,kBAAkB,CAAC,CAAC;;AAE3B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAC1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,IAAIK,eAAe,EAAE;MACnB,MAAMG,gBAAgB,GAAG,MAAAA,CAAA,KAAY;QACnC,IAAI;UACF,MAAMC,OAAO,GAAG,MAAMN,UAAU,CAACK,gBAAgB,CAACH,eAAe,CAACK,UAAU,CAAC;UAC7EC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,OAAO,CAAC;UACrCF,cAAc,CAACE,OAAO,CAAC;QACzB,CAAC,CAAC,OAAOI,KAAK,EAAE;UACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACtD;MACF,CAAC;MAEDL,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACH,eAAe,CAAC,CAAC;EAErB,IAAI,CAACA,eAAe,EAAE;IACpB,oBAAON,KAAA,CAAAe,aAAA;MAAKC,SAAS,EAAC,aAAa;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,wCAA2C,CAAC;EAClF;EAEA,oBACEtB,KAAA,CAAAe,aAAA;IAAKC,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BtB,KAAA,CAAAe,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKhB,eAAe,CAACiB,YAAiB,CAAC,eACvCvB,KAAA,CAAAe,aAAA;IAAKC,SAAS,EAAC,UAAU;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtBf,WAAW,IAAIA,WAAW,CAACiB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC7C1B,KAAA,CAAAe,aAAA,CAACZ,WAAW;IAACwB,GAAG,EAAED,KAAM;IAACD,OAAO,EAAEA,OAAQ;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC7C,CACE,CACF,CAAC;AAEV,CAAC;AAED,eAAejB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}