{"ast":null,"code":"import authHeader from './auth.header';\nexport default async function makeApiCall({\n  endpoint = \"\",\n  method = \"GET\",\n  headers = {\n    \"Content-Type\": \"application/json\"\n  },\n  body = {},\n  timeout = 90000,\n  binaryResponse = false,\n  streamResponse = false\n} = {}) {\n  if (endpoint === \"\") {\n    throw new Error(\"Endpoint is required\");\n  }\n  if (method.toUpperCase() === \"GET\") {\n    // For GET requests, we don't need to send any data in the request body\n    body = undefined;\n  } else if (body instanceof FormData) {\n    // For FormData, do not set Content-Type header\n    delete headers[\"Content-Type\"];\n  } else {\n    body = JSON.stringify(body);\n  }\n  try {\n    const controller = new AbortController();\n    const callTimeout = setTimeout(() => {\n      controller.abort();\n    }, timeout);\n\n    //headers = {\"Content-Type\": \"application/json\"}\n    if (!(endpoint.includes(\"loginUser\") || endpoint.includes(\"registerUser\"))) {\n      headers = {\n        ...headers\n        //...authHeader()\n      };\n    }\n    const response = await fetch(endpoint, {\n      method,\n      headers,\n      body: body,\n      signal: controller.signal\n    });\n    if (streamResponse) {\n      return response;\n    }\n    const data = await response.json();\n\n    // not sure if its good idea\n    //if (response.ok) {\n    if (response.ok && data.code === 200) {\n      return {\n        code: 200,\n        success: true,\n        message: data.message\n      };\n    } else {\n      //throw new Error(data.message || \"Something went wrong!\");\n      return {\n        code: data.code,\n        success: false,\n        message: data.message\n      };\n    }\n  } catch (error) {\n    if (error.name === \"AbortError\") {\n      return {\n        code: 408,\n        success: false,\n        message: \"Problem reaching auth server. Please contact us!\"\n      };\n    } else {\n      console.log(\"error: \", error);\n      return {\n        code: 500,\n        success: false,\n        message: \"Something went wrong\"\n      };\n    }\n  }\n}","map":{"version":3,"names":["authHeader","makeApiCall","endpoint","method","headers","body","timeout","binaryResponse","streamResponse","Error","toUpperCase","undefined","FormData","JSON","stringify","controller","AbortController","callTimeout","setTimeout","abort","includes","response","fetch","signal","data","json","ok","code","success","message","error","name","console","log"],"sources":["/app/src/services/api.service.js"],"sourcesContent":["import authHeader from './auth.header';\n\n\nexport default async function makeApiCall({\n  endpoint = \"\",\n  method = \"GET\",\n  headers = { \"Content-Type\": \"application/json\" },\n  body = {},\n  timeout = 90000,\n  binaryResponse = false,\n  streamResponse = false,\n} = {}) {\n  if (endpoint === \"\") {\n    throw new Error(\"Endpoint is required\");\n  }\n  if(method.toUpperCase() === \"GET\") {\n    // For GET requests, we don't need to send any data in the request body\n    body = undefined;\n  } else if (body instanceof FormData) {\n    // For FormData, do not set Content-Type header\n    delete headers[\"Content-Type\"];\n  } else {\n    body = JSON.stringify(body);\n  }\n\n  try {\n    const controller = new AbortController();\n    const callTimeout = setTimeout(() => {\n      controller.abort();\n    }, timeout);\n\n    //headers = {\"Content-Type\": \"application/json\"}\n    if (!(endpoint.includes(\"loginUser\") || endpoint.includes(\"registerUser\"))) {\n      headers = {\n        ...headers,\n        //...authHeader()\n      }\n    }\n\n    const response = await fetch(endpoint, {\n      method,\n      headers,\n      body: body,\n      signal: controller.signal\n    });\n\n    if (streamResponse) {\n      return response;\n    }\n    const data = await response.json();\n\n    // not sure if its good idea\n    //if (response.ok) {\n    if (response.ok && data.code === 200) {\n      return { code: 200, success: true, message: data.message }\n    } else {\n      //throw new Error(data.message || \"Something went wrong!\");\n      return { code: data.code, success: false, message: data.message }\n    }\n\n  } catch (error) {\n    if (error.name === \"AbortError\") {\n      return { code: 408, success: false, message: \"Problem reaching auth server. Please contact us!\" };\n    } else {\n      console.log(\"error: \", error)\n      return { code: 500, success: false, message: \"Something went wrong\" };\n    }\n  }\n}\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,eAAe;AAGtC,eAAe,eAAeC,WAAWA,CAAC;EACxCC,QAAQ,GAAG,EAAE;EACbC,MAAM,GAAG,KAAK;EACdC,OAAO,GAAG;IAAE,cAAc,EAAE;EAAmB,CAAC;EAChDC,IAAI,GAAG,CAAC,CAAC;EACTC,OAAO,GAAG,KAAK;EACfC,cAAc,GAAG,KAAK;EACtBC,cAAc,GAAG;AACnB,CAAC,GAAG,CAAC,CAAC,EAAE;EACN,IAAIN,QAAQ,KAAK,EAAE,EAAE;IACnB,MAAM,IAAIO,KAAK,CAAC,sBAAsB,CAAC;EACzC;EACA,IAAGN,MAAM,CAACO,WAAW,CAAC,CAAC,KAAK,KAAK,EAAE;IACjC;IACAL,IAAI,GAAGM,SAAS;EAClB,CAAC,MAAM,IAAIN,IAAI,YAAYO,QAAQ,EAAE;IACnC;IACA,OAAOR,OAAO,CAAC,cAAc,CAAC;EAChC,CAAC,MAAM;IACLC,IAAI,GAAGQ,IAAI,CAACC,SAAS,CAACT,IAAI,CAAC;EAC7B;EAEA,IAAI;IACF,MAAMU,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;IACxC,MAAMC,WAAW,GAAGC,UAAU,CAAC,MAAM;MACnCH,UAAU,CAACI,KAAK,CAAC,CAAC;IACpB,CAAC,EAAEb,OAAO,CAAC;;IAEX;IACA,IAAI,EAAEJ,QAAQ,CAACkB,QAAQ,CAAC,WAAW,CAAC,IAAIlB,QAAQ,CAACkB,QAAQ,CAAC,cAAc,CAAC,CAAC,EAAE;MAC1EhB,OAAO,GAAG;QACR,GAAGA;QACH;MACF,CAAC;IACH;IAEA,MAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAACpB,QAAQ,EAAE;MACrCC,MAAM;MACNC,OAAO;MACPC,IAAI,EAAEA,IAAI;MACVkB,MAAM,EAAER,UAAU,CAACQ;IACrB,CAAC,CAAC;IAEF,IAAIf,cAAc,EAAE;MAClB,OAAOa,QAAQ;IACjB;IACA,MAAMG,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;;IAElC;IACA;IACA,IAAIJ,QAAQ,CAACK,EAAE,IAAIF,IAAI,CAACG,IAAI,KAAK,GAAG,EAAE;MACpC,OAAO;QAAEA,IAAI,EAAE,GAAG;QAAEC,OAAO,EAAE,IAAI;QAAEC,OAAO,EAAEL,IAAI,CAACK;MAAQ,CAAC;IAC5D,CAAC,MAAM;MACL;MACA,OAAO;QAAEF,IAAI,EAAEH,IAAI,CAACG,IAAI;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAEL,IAAI,CAACK;MAAQ,CAAC;IACnE;EAEF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACC,IAAI,KAAK,YAAY,EAAE;MAC/B,OAAO;QAAEJ,IAAI,EAAE,GAAG;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAmD,CAAC;IACnG,CAAC,MAAM;MACLG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,KAAK,CAAC;MAC7B,OAAO;QAAEH,IAAI,EAAE,GAAG;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAuB,CAAC;IACvE;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module"}